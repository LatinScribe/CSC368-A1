
---------- Begin Simulation Statistics ----------
simSeconds                                   1.066994                       # Number of seconds simulated (Second)
simTicks                                 1066993710000                       # Number of ticks simulated (Tick)
finalTick                                1066993710000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                    180.43                       # Real time elapsed on the host (Second)
hostTickRate                               5913549526                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    8629528                       # Number of bytes of host memory used (Byte)
simInsts                                     29172397                       # Number of instructions simulated (Count)
simOps                                       56210819                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   161681                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     311534                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
system.clk_domain.clock                          2000                       # Clock period in ticks (Tick)
system.clk_domain.voltage_domain.voltage            1                       # Voltage in Volts (Volt)
system.cpu.numCycles                        533496855                       # Number of cpu cycles simulated (Cycle)
system.cpu.cpi                              18.287728                       # CPI: cycles per instruction (core level) ((Cycle/Count))
system.cpu.ipc                               0.054681                       # IPC: instructions per cycle (core level) ((Count/Cycle))
system.cpu.numWorkItemsStarted                      0                       # Number of work items this cpu started (Count)
system.cpu.numWorkItemsCompleted                    0                       # Number of work items this cpu completed (Count)
system.cpu.branchPred.lookups_0::NoBranch            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::Return             0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::CallDirect            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::CallIndirect            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::DirectCond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::DirectUncond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::IndirectCond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::IndirectUncond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::total              0                       # Number of BP lookups (Count)
system.cpu.branchPred.squashes_0::NoBranch            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::Return            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::CallDirect            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::CallIndirect            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::DirectCond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::DirectUncond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::IndirectCond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::IndirectUncond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::total             0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.corrected_0::NoBranch            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::Return            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::CallDirect            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::CallIndirect            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::DirectCond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::DirectUncond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::IndirectCond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::IndirectUncond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::total            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.committed_0::NoBranch            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::Return            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::CallDirect            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::CallIndirect            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::DirectCond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::DirectUncond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::IndirectCond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::IndirectUncond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::total            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.mispredicted_0::NoBranch            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::Return            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::CallDirect            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::CallIndirect            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::DirectCond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::DirectUncond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::IndirectCond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::IndirectUncond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::total            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.targetProvider_0::NoTarget            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::BTB            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::RAS            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::Indirect            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::total            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetWrong_0::NoBranch            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::Return            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::CallDirect            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::CallIndirect            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::DirectCond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::DirectUncond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::IndirectCond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::IndirectUncond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::total            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.condPredicted                 0                       # Number of conditional branches predicted (Count)
system.cpu.branchPred.condPredictedTaken            0                       # Number of conditional branches predicted as taken (Count)
system.cpu.branchPred.condIncorrect                 0                       # Number of conditional branches incorrect (Count)
system.cpu.branchPred.predTakenBTBMiss              0                       # Number of branches predicted taken but missed in BTB (Count)
system.cpu.branchPred.NotTakenMispredicted            0                       # Number branches predicted 'not taken' but turned out to be taken (Count)
system.cpu.branchPred.TakenMispredicted             0                       # Number branches predicted taken but are actually not taken (Count)
system.cpu.branchPred.BTBLookups                    0                       # Number of BTB lookups (Count)
system.cpu.branchPred.BTBUpdates                    0                       # Number of BTB updates (Count)
system.cpu.branchPred.BTBHits                       0                       # Number of BTB hits (Count)
system.cpu.branchPred.BTBHitRatio                 nan                       # BTB Hit Ratio (Ratio)
system.cpu.branchPred.BTBMispredicted               0                       # Number BTB mispredictions. No target found or target wrong (Count)
system.cpu.branchPred.indirectLookups               0                       # Number of indirect predictor lookups. (Count)
system.cpu.branchPred.indirectHits                  0                       # Number of indirect target hits. (Count)
system.cpu.branchPred.indirectMisses                0                       # Number of indirect misses. (Count)
system.cpu.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
system.cpu.branchPred.btb.lookups::NoBranch            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::Return            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::CallDirect            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::CallIndirect            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::DirectCond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::DirectUncond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::IndirectCond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::IndirectUncond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::total            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.misses::NoBranch            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::Return            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::CallDirect            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::CallIndirect            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::DirectCond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::DirectUncond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::IndirectCond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::IndirectUncond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::total             0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.updates::NoBranch            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::Return            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::CallDirect            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::CallIndirect            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::DirectCond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::DirectUncond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::IndirectCond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::IndirectUncond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::total            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.mispredict::NoBranch            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::Return            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::CallDirect            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::CallIndirect            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::DirectCond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::DirectUncond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::IndirectCond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::IndirectUncond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::total            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 1066993710000                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
system.cpu.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
system.cpu.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
system.cpu.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
system.cpu.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
system.cpu.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
system.cpu.branchPred.ras.pushes                    0                       # Number of times a PC was pushed onto the RAS (Count)
system.cpu.branchPred.ras.pops                      0                       # Number of times a PC was poped from the RAS (Count)
system.cpu.branchPred.ras.squashes                  0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
system.cpu.branchPred.ras.used                      0                       # Number of times the RAS is the provider (Count)
system.cpu.branchPred.ras.correct                   0                       # Number of times the RAS is the provider and the prediction is correct (Count)
system.cpu.branchPred.ras.incorrect                 0                       # Number of times the RAS is the provider and the prediction is wrong (Count)
system.cpu.commitStats0.numInsts             29172397                       # Number of instructions committed (thread level) (Count)
system.cpu.commitStats0.numOps               56210819                       # Number of ops (including micro ops) committed (thread level) (Count)
system.cpu.commitStats0.numInstsNotNOP              0                       # Number of instructions committed excluding NOPs or prefetches (Count)
system.cpu.commitStats0.numOpsNotNOP                0                       # Number of Ops (including micro ops) Simulated (Count)
system.cpu.commitStats0.cpi                 18.287728                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
system.cpu.commitStats0.ipc                  0.054681                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
system.cpu.commitStats0.numMemRefs                  0                       # Number of memory references committed (Count)
system.cpu.commitStats0.numFpInsts                  0                       # Number of float instructions (Count)
system.cpu.commitStats0.numIntInsts                 0                       # Number of integer instructions (Count)
system.cpu.commitStats0.numLoadInsts                0                       # Number of load instructions (Count)
system.cpu.commitStats0.numStoreInsts               0                       # Number of store instructions (Count)
system.cpu.commitStats0.numVecInsts                 0                       # Number of vector instructions (Count)
system.cpu.commitStats0.committedInstType::No_OpClass      1333068      2.37%      2.37% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IntAlu     38627617     68.72%     71.09% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IntMult        64326      0.11%     71.21% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IntDiv        41117      0.07%     71.28% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatAdd       135687      0.24%     71.52% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatCmp            0      0.00%     71.52% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatCvt         1552      0.00%     71.52% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMult            0      0.00%     71.52% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMultAcc            0      0.00%     71.52% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatDiv            0      0.00%     71.52% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMisc            0      0.00%     71.52% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatSqrt            0      0.00%     71.52% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAdd         6798      0.01%     71.53% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAddAcc            0      0.00%     71.53% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAlu       141711      0.25%     71.79% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdCmp           30      0.00%     71.79% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdCvt        13652      0.02%     71.81% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMisc       303039      0.54%     72.35% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMult            0      0.00%     72.35% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMultAcc            0      0.00%     72.35% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     72.35% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShift         1907      0.00%     72.35% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     72.35% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdDiv            0      0.00%     72.35% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSqrt            0      0.00%     72.35% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatAdd        32110      0.06%     72.41% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     72.41% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     72.41% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatCvt        64221      0.11%     72.52% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatDiv        32110      0.06%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMult            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAes            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAesMix            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdPredAlu            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::Matrix            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MatrixMov            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MatrixOP            0      0.00%     72.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MemRead      8430989     15.00%     87.58% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MemWrite      6594328     11.73%     99.31% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMemRead       210742      0.37%     99.69% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMemWrite       175815      0.31%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdExt            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::total     56210819                       # Class of committed instruction. (Count)
system.cpu.executeStats0.numInsts                   0                       # Number of executed instructions (Count)
system.cpu.executeStats0.numNop                     0                       # Number of nop insts executed (Count)
system.cpu.executeStats0.numBranches                0                       # Number of branches executed (Count)
system.cpu.executeStats0.numLoadInsts               0                       # Number of load instructions executed (Count)
system.cpu.executeStats0.numStoreInsts              0                       # Number of stores executed (Count)
system.cpu.executeStats0.instRate                   0                       # Inst execution rate ((Count/Cycle))
system.cpu.executeStats0.numFpRegWrites             0                       # Number of times the floating registers were written (Count)
system.cpu.executeStats0.numMemRefs                 0                       # Number of memory refs (Count)
system.cpu.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
system.cpu.executeStats0.numDiscardedOps     10821699                       # Number of ops (including micro ops) which were discarded before commit (Count)
system.cpu.fetch2.intInstructions                  60                       # Number of integer instructions successfully decoded (Count)
system.cpu.fetch2.fpInstructions                    0                       # Number of floating point instructions successfully decoded (Count)
system.cpu.fetch2.vecInstructions                   0                       # Number of SIMD instructions successfully decoded (Count)
system.cpu.fetch2.loadInstructions                  0                       # Number of memory load instructions successfully decoded (Count)
system.cpu.fetch2.storeInstructions                 0                       # Number of memory store instructions successfully decoded (Count)
system.cpu.fetch2.amoInstructions                   0                       # Number of memory atomic instructions successfully decoded (Count)
system.cpu.fetchStats0.numInsts                     0                       # Number of instructions fetched (thread level) (Count)
system.cpu.fetchStats0.numOps                       0                       # Number of ops (including micro ops) fetched (thread level) (Count)
system.cpu.fetchStats0.fetchRate                    0                       # Number of inst fetches per cycle ((Count/Cycle))
system.cpu.fetchStats0.branchRate                   0                       # Number of branch fetches per cycle (Ratio)
system.cpu.fetchStats0.numFetchSuspends             0                       # Number of times Execute suspended instruction fetching (Count)
system.cpu.interrupts.clk_domain.clock          32000                       # Clock period in ticks (Tick)
system.cpu.mmu.dtb.rdAccesses                10008332                       # TLB accesses on read requests (Count)
system.cpu.mmu.dtb.wrAccesses                 6964955                       # TLB accesses on write requests (Count)
system.cpu.mmu.dtb.rdMisses                      6734                       # TLB misses on read requests (Count)
system.cpu.mmu.dtb.wrMisses                       119                       # TLB misses on write requests (Count)
system.cpu.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 1066993710000                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.mmu.itb.rdAccesses                       0                       # TLB accesses on read requests (Count)
system.cpu.mmu.itb.wrAccesses                11151931                       # TLB accesses on write requests (Count)
system.cpu.mmu.itb.rdMisses                         0                       # TLB misses on read requests (Count)
system.cpu.mmu.itb.wrMisses                       609                       # TLB misses on write requests (Count)
system.cpu.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 1066993710000                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.power_state.pwrStateResidencyTicks::ON 1066993710000                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.thread_0.numInsts                 29172397                       # Number of Instructions committed (Count)
system.cpu.thread_0.numOps                   56210819                       # Number of Ops committed (Count)
system.cpu.thread_0.numMemRefs                      0                       # Number of Memory References (Count)
system.cpu.workload.numSyscalls                 32205                       # Number of system calls (Count)
system.mem_ctrl.avgPriority_cpu.inst::samples  11151737.00                       # Average QoS priority value for accepted requests (Count)
system.mem_ctrl.avgPriority_cpu.data::samples   8007025.00                       # Average QoS priority value for accepted requests (Count)
system.mem_ctrl.priorityMinLatency       0.000000018750                       # per QoS priority minimum request to response latency (Second)
system.mem_ctrl.priorityMaxLatency       2.000322341750                       # per QoS priority maximum request to response latency (Second)
system.mem_ctrl.numReadWriteTurnArounds           492                       # Number of turnarounds from READ to WRITE (Count)
system.mem_ctrl.numWriteReadTurnArounds           492                       # Number of turnarounds from WRITE to READ (Count)
system.mem_ctrl.numStayReadState             45208007                       # Number of times bus staying in READ state (Count)
system.mem_ctrl.numStayWriteState                7494                       # Number of times bus staying in WRITE state (Count)
system.mem_ctrl.readReqs                     20732102                       # Number of read requests accepted (Count)
system.mem_ctrl.writeReqs                     6770124                       # Number of write requests accepted (Count)
system.mem_ctrl.readBursts                   20732102                       # Number of controller read bursts, including those serviced by the write queue (Count)
system.mem_ctrl.writeBursts                   6770124                       # Number of controller write bursts, including those merged in the write queue (Count)
system.mem_ctrl.servicedByWrQ                 1581350                       # Number of controller read bursts serviced by the write queue (Count)
system.mem_ctrl.mergedWrBursts                6762114                       # Number of controller write bursts merged with an existing one (Count)
system.mem_ctrl.neitherReadNorWriteReqs             0                       # Number of requests that are neither read nor write (Count)
system.mem_ctrl.avgRdQLen                        1.30                       # Average read queue length when enqueuing ((Count/Tick))
system.mem_ctrl.avgWrQLen                       24.24                       # Average write queue length when enqueuing ((Count/Tick))
system.mem_ctrl.numRdRetry                          0                       # Number of times read queue was full causing retry (Count)
system.mem_ctrl.numWrRetry                          0                       # Number of times write queue was full causing retry (Count)
system.mem_ctrl.readPktSize::0                 892388                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::1                 207231                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::2                 295755                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::3                8184991                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::4                      0                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::5                      0                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::6               11151737                       # Read request sizes (log2) (Count)
system.mem_ctrl.writePktSize::0                546662                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::1                418837                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::2                411136                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::3               5393489                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::4                     0                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::5                     0                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::6                     0                       # Write request sizes (log2) (Count)
system.mem_ctrl.rdQLenPdf::0                 14605498                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::1                  4295228                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::2                   250026                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::3                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::4                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::5                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::6                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::7                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::8                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::9                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::10                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::11                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::12                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::13                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::14                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::15                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::16                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::17                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::18                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::19                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::20                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::21                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::22                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::23                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::24                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::25                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::26                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::27                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::28                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::29                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::30                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::31                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::0                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::1                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::2                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::3                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::4                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::5                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::6                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::7                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::8                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::9                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::10                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::11                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::12                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::13                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::14                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::15                      41                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::16                      60                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::17                     461                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::18                     491                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::19                     501                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::20                     496                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::21                     499                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::22                     503                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::23                     496                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::24                     494                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::25                     497                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::26                     503                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::27                     493                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::28                     492                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::29                     492                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::30                     492                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::31                     492                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::32                     492                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::33                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::34                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::35                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::36                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::37                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::38                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::39                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::40                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::41                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::42                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::43                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::44                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::45                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::46                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::47                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::48                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::49                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::50                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::51                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::52                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::53                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::54                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::55                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::56                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::57                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::58                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::59                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::60                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::61                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::62                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::63                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.rdPerTurnAround::samples          492                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::mean    38923.839431                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::gmean    1226.373026                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::stdev   804743.586923                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::0-1.04858e+06          491     99.80%     99.80% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::1.78258e+07-1.88744e+07            1      0.20%    100.00% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::total            492                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.wrPerTurnAround::samples          492                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::mean       16.225610                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::gmean      16.213826                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::stdev       0.641341                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::16               431     87.60%     87.60% # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::17                18      3.66%     91.26% # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::18                37      7.52%     98.78% # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::19                 5      1.02%     99.80% # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::20                 1      0.20%    100.00% # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::total            492                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.bytesReadWrQ                101206400                       # Total number of bytes read from write queue (Byte)
system.mem_ctrl.bytesReadSys                781680837                       # Total read bytes from the system interface side (Byte)
system.mem_ctrl.bytesWrittenSys              46176776                       # Total written bytes from the system interface side (Byte)
system.mem_ctrl.avgRdBWSys               732601166.88035583                       # Average system read bandwidth in Byte/s ((Byte/Second))
system.mem_ctrl.avgWrBWSys               43277458.49598307                       # Average system write bandwidth in Byte/s ((Byte/Second))
system.mem_ctrl.totGap                   1066993696000                       # Total gap between requests (Tick)
system.mem_ctrl.avgGap                       38796.63                       # Average gap between requests ((Tick/Count))
system.mem_ctrl.requestorReadBytes::cpu.inst    713711168                       # Per-requestor bytes read from memory (Byte)
system.mem_ctrl.requestorReadBytes::cpu.data     57027339                       # Per-requestor bytes read from memory (Byte)
system.mem_ctrl.requestorWriteBytes::cpu.data        59968                       # Per-requestor bytes write to memory (Byte)
system.mem_ctrl.requestorReadRate::cpu.inst 668899133.435378909111                       # Per-requestor bytes read from memory rate ((Byte/Second))
system.mem_ctrl.requestorReadRate::cpu.data 53446743.373960472643                       # Per-requestor bytes read from memory rate ((Byte/Second))
system.mem_ctrl.requestorWriteRate::cpu.data 56202.768055680477                       # Per-requestor bytes write to memory rate ((Byte/Second))
system.mem_ctrl.requestorReadAccesses::cpu.inst     11151737                       # Per-requestor read serviced memory accesses (Count)
system.mem_ctrl.requestorReadAccesses::cpu.data      9580365                       # Per-requestor read serviced memory accesses (Count)
system.mem_ctrl.requestorWriteAccesses::cpu.data      6770124                       # Per-requestor write serviced memory accesses (Count)
system.mem_ctrl.requestorReadTotalLat::cpu.inst 271337396500                       # Per-requestor read total memory access latency (Tick)
system.mem_ctrl.requestorReadTotalLat::cpu.data 224409100000                       # Per-requestor read total memory access latency (Tick)
system.mem_ctrl.requestorWriteTotalLat::cpu.data 25847536510750                       # Per-requestor write total memory access latency (Tick)
system.mem_ctrl.requestorReadAvgLat::cpu.inst     24331.40                       # Per-requestor read average memory access latency ((Tick/Count))
system.mem_ctrl.requestorReadAvgLat::cpu.data     23423.86                       # Per-requestor read average memory access latency ((Tick/Count))
system.mem_ctrl.requestorWriteAvgLat::cpu.data   3817882.29                       # Per-requestor write average memory access latency ((Tick/Count))
system.mem_ctrl.dram.bytesRead::cpu.inst    713711104                       # Number of bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesRead::cpu.data     67969669                       # Number of bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesRead::total       781680773                       # Number of bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesInstRead::cpu.inst    713711104                       # Number of instructions bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesInstRead::total    713711104                       # Number of instructions bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesWritten::cpu.data     46176776                       # Number of bytes written to this memory (Byte)
system.mem_ctrl.dram.bytesWritten::total     46176776                       # Number of bytes written to this memory (Byte)
system.mem_ctrl.dram.numReads::cpu.inst      11151736                       # Number of read requests responded to by this memory (Count)
system.mem_ctrl.dram.numReads::cpu.data       9580365                       # Number of read requests responded to by this memory (Count)
system.mem_ctrl.dram.numReads::total         20732101                       # Number of read requests responded to by this memory (Count)
system.mem_ctrl.dram.numWrites::cpu.data      6770124                       # Number of write requests responded to by this memory (Count)
system.mem_ctrl.dram.numWrites::total         6770124                       # Number of write requests responded to by this memory (Count)
system.mem_ctrl.dram.bwRead::cpu.inst       668899073                       # Total read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwRead::cpu.data        63702033                       # Total read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwRead::total          732601107                       # Total read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwInstRead::cpu.inst    668899073                       # Instruction read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwInstRead::total      668899073                       # Instruction read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwWrite::cpu.data       43277458                       # Write bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwWrite::total          43277458                       # Write bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwTotal::cpu.inst      668899073                       # Total bandwidth to/from this memory ((Byte/Second))
system.mem_ctrl.dram.bwTotal::cpu.data      106979492                       # Total bandwidth to/from this memory ((Byte/Second))
system.mem_ctrl.dram.bwTotal::total         775878565                       # Total bandwidth to/from this memory ((Byte/Second))
system.mem_ctrl.dram.readBursts              19150752                       # Number of DRAM read bursts (Count)
system.mem_ctrl.dram.writeBursts                 7983                       # Number of DRAM write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::0       1347837                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::1       1687950                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::2        301024                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::3       1503121                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::4        703342                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::5       1053615                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::6        470353                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::7        163535                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::8        292680                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::9       1370129                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::10       211666                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::11      3295042                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::12       958122                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::13      5271771                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::14       191554                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::15       329011                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::0           401                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::1           190                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::2             0                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::3           329                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::4           286                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::5           422                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::6           531                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::7           556                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::8            94                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::9           168                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::10           48                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::11           97                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::12          475                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::13         3539                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::14          362                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::15          485                       # Per bank write bursts (Count)
system.mem_ctrl.dram.totQLat             136669896500                       # Total ticks spent queuing (Tick)
system.mem_ctrl.dram.totBusLat            95753760000                       # Total ticks spent in databus transfers (Tick)
system.mem_ctrl.dram.totMemAccLat        495746496500                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
system.mem_ctrl.dram.avgQLat                  7136.53                       # Average queueing delay per DRAM burst ((Tick/Count))
system.mem_ctrl.dram.avgBusLat                5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
system.mem_ctrl.dram.avgMemAccLat            25886.53                       # Average memory access latency per DRAM burst ((Tick/Count))
system.mem_ctrl.dram.readRowHits             15511323                       # Number of row buffer hits during reads (Count)
system.mem_ctrl.dram.writeRowHits                7024                       # Number of row buffer hits during writes (Count)
system.mem_ctrl.dram.readRowHitRate             81.00                       # Row buffer hit rate for reads (Ratio)
system.mem_ctrl.dram.writeRowHitRate            87.99                       # Row buffer hit rate for writes (Ratio)
system.mem_ctrl.dram.bytesPerActivate::samples      3640381                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::mean   336.821149                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::gmean   216.163681                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::stdev   322.958835                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::0-127       905270     24.87%     24.87% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::128-255      1253601     34.44%     59.30% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::256-383       307679      8.45%     67.76% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::384-511       332411      9.13%     76.89% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::512-639       199697      5.49%     82.37% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::640-767        37170      1.02%     83.39% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::768-895       101009      2.77%     86.17% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::896-1023        35593      0.98%     87.15% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::1024-1151       467951     12.85%    100.00% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::total      3640381                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.dramBytesRead         1225648128                       # Total bytes read (Byte)
system.mem_ctrl.dram.dramBytesWritten          510912                       # Total bytes written (Byte)
system.mem_ctrl.dram.avgRdBW              1148.692927                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
system.mem_ctrl.dram.avgWrBW                 0.478833                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
system.mem_ctrl.dram.peakBW                  12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
system.mem_ctrl.dram.busUtil                     8.98                       # Data bus utilization in percentage (Ratio)
system.mem_ctrl.dram.busUtilRead                 8.97                       # Data bus utilization in percentage for reads (Ratio)
system.mem_ctrl.dram.busUtilWrite                0.00                       # Data bus utilization in percentage for writes (Ratio)
system.mem_ctrl.dram.pageHitRate                81.00                       # Row buffer hit rate, read and write combined (Ratio)
system.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED 1066993710000                       # Cumulative time (in ticks) in various power states (Tick)
system.mem_ctrl.dram.rank0.actEnergy      14361381720                       # Energy for activate commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.preEnergy       7633244025                       # Energy for precharge commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.readEnergy     51627747780                       # Energy for read commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.writeEnergy       14172300                       # Energy for write commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.refreshEnergy 84227192400.000015                       # Energy for refresh commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.actBackEnergy 477845080140                       # Energy for active background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.preBackEnergy   7329727680                       # Energy for precharge background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.totalEnergy   643038546045                       # Total energy per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.averagePower    602.663858                       # Core power per rank (mW) (Watt)
system.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::IDLE  14193922000                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::REF  35629100000                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::ACT 1017170688000                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.actEnergy      11630988600                       # Energy for activate commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.preEnergy       6182001870                       # Energy for precharge commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.readEnergy     85108621500                       # Energy for read commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.writeEnergy       27498960                       # Energy for write commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.refreshEnergy 84227192400.000015                       # Energy for refresh commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.actBackEnergy 478350672420                       # Energy for active background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.preBackEnergy   6903965760                       # Energy for precharge background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.totalEnergy   672430941510                       # Total energy per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.averagePower    630.210783                       # Core power per rank (mW) (Watt)
system.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::IDLE  13711456250                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::REF  35629100000                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::ACT 1017653153750                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED 1066993710000                       # Cumulative time (in ticks) in various power states (Tick)
system.membus.transDist::ReadReq             20731468                       # Transaction distribution (Count)
system.membus.transDist::ReadResp            20731467                       # Transaction distribution (Count)
system.membus.transDist::WriteReq             6769492                       # Transaction distribution (Count)
system.membus.transDist::WriteResp            6769492                       # Transaction distribution (Count)
system.membus.transDist::SoftPFReq                  2                       # Transaction distribution (Count)
system.membus.transDist::SoftPFResp                 2                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWReadReq          632                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWReadResp          632                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWWriteReq          632                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWWriteResp          632                       # Transaction distribution (Count)
system.membus.pktCount_system.cpu.fetch1.icache_port::system.mem_ctrl.port     22303473                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount_system.cpu.fetch1.icache_port::total     22303473                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount_system.cpu.execute.dcache_port::system.mem_ctrl.port     32700978                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount_system.cpu.execute.dcache_port::total     32700978                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount::total                55004451                       # Packet count per connected requestor and responder (Count)
system.membus.pktSize_system.cpu.fetch1.icache_port::system.mem_ctrl.port    713711104                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize_system.cpu.fetch1.icache_port::total    713711104                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize_system.cpu.execute.dcache_port::system.mem_ctrl.port    114146445                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize_system.cpu.execute.dcache_port::total    114146445                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize::total                827857549                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.snoops                                0                       # Total snoops (Count)
system.membus.snoopTraffic                          0                       # Total snoop traffic (Byte)
system.membus.snoopFanout::samples           27502226                       # Request fanout histogram (Count)
system.membus.snoopFanout::mean                     0                       # Request fanout histogram (Count)
system.membus.snoopFanout::stdev                    0                       # Request fanout histogram (Count)
system.membus.snoopFanout::underflows               0      0.00%      0.00% # Request fanout histogram (Count)
system.membus.snoopFanout::0                 27502226    100.00%    100.00% # Request fanout histogram (Count)
system.membus.snoopFanout::1                        0      0.00%    100.00% # Request fanout histogram (Count)
system.membus.snoopFanout::overflows                0      0.00%    100.00% # Request fanout histogram (Count)
system.membus.snoopFanout::min_value                0                       # Request fanout histogram (Count)
system.membus.snoopFanout::max_value                0                       # Request fanout histogram (Count)
system.membus.snoopFanout::total             27502226                       # Request fanout histogram (Count)
system.membus.power_state.pwrStateResidencyTicks::UNDEFINED 1066993710000                       # Cumulative time (in ticks) in various power states (Tick)
system.membus.reqLayer2.occupancy         68544700000                       # Layer occupancy (ticks) (Tick)
system.membus.reqLayer2.utilization               0.1                       # Layer utilization (Ratio)
system.membus.respLayer1.occupancy       125825563999                       # Layer occupancy (ticks) (Tick)
system.membus.respLayer1.utilization              0.1                       # Layer utilization (Ratio)
system.membus.respLayer2.occupancy        61827852249                       # Layer occupancy (ticks) (Tick)
system.membus.respLayer2.utilization              0.1                       # Layer utilization (Ratio)
system.membus.snoop_filter.totRequests              0                       # Total number of requests made to the snoop filter. (Count)
system.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
system.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
system.membus.snoop_filter.totSnoops                0                       # Total number of snoops made to the snoop filter. (Count)
system.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
system.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
system.workload.inst.arm                            0                       # number of arm instructions executed (Count)
system.workload.inst.quiesce                        0                       # number of quiesce instructions executed (Count)
system.cpu.idleCycles                       354817653                       # Total number of cycles that the object has spent stopped (Unspecified)
system.cpu.tickCycles                       178679202                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------
