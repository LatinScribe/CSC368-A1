
---------- Begin Simulation Statistics ----------
simSeconds                                  11.274549                       # Number of seconds simulated (Second)
simTicks                                 11274548555906                       # Number of ticks simulated (Tick)
finalTick                                11274548555906                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                    747.11                       # Real time elapsed on the host (Second)
hostTickRate                              15090944808                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    8660980                       # Number of bytes of host memory used (Byte)
simInsts                                    102557568                       # Number of instructions simulated (Count)
simOps                                      198865108                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   137273                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     266180                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
system.clk_domain.clock                         13333                       # Clock period in ticks (Tick)
system.clk_domain.voltage_domain.voltage            1                       # Voltage in Volts (Volt)
system.cpu.numCycles                        845612282                       # Number of cpu cycles simulated (Cycle)
system.cpu.cpi                               8.245245                       # CPI: cycles per instruction (core level) ((Cycle/Count))
system.cpu.ipc                               0.121282                       # IPC: instructions per cycle (core level) ((Count/Cycle))
system.cpu.numWorkItemsStarted                      0                       # Number of work items this cpu started (Count)
system.cpu.numWorkItemsCompleted                    0                       # Number of work items this cpu completed (Count)
system.cpu.branchPred.lookups_0::NoBranch            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::Return             0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::CallDirect            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::CallIndirect            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::DirectCond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::DirectUncond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::IndirectCond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::IndirectUncond            0                       # Number of BP lookups (Count)
system.cpu.branchPred.lookups_0::total              0                       # Number of BP lookups (Count)
system.cpu.branchPred.squashes_0::NoBranch            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::Return            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::CallDirect            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::CallIndirect            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::DirectCond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::DirectUncond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::IndirectCond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::IndirectUncond            0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.squashes_0::total             0                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
system.cpu.branchPred.corrected_0::NoBranch            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::Return            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::CallDirect            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::CallIndirect            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::DirectCond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::DirectUncond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::IndirectCond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::IndirectUncond            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.corrected_0::total            0                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
system.cpu.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
system.cpu.branchPred.committed_0::NoBranch            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::Return            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::CallDirect            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::CallIndirect            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::DirectCond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::DirectUncond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::IndirectCond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::IndirectUncond            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.committed_0::total            0                       # Number of branches finally committed  (Count)
system.cpu.branchPred.mispredicted_0::NoBranch            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::Return            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::CallDirect            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::CallIndirect            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::DirectCond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::DirectUncond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::IndirectCond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::IndirectUncond            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.mispredicted_0::total            0                       # Number of committed branches that were mispredicted. (Count)
system.cpu.branchPred.targetProvider_0::NoTarget            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::BTB            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::RAS            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::Indirect            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetProvider_0::total            0                       # The component providing the target for taken branches (Count)
system.cpu.branchPred.targetWrong_0::NoBranch            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::Return            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::CallDirect            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::CallIndirect            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::DirectCond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::DirectUncond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::IndirectCond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::IndirectUncond            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.targetWrong_0::total            0                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
system.cpu.branchPred.condPredicted                 0                       # Number of conditional branches predicted (Count)
system.cpu.branchPred.condPredictedTaken            0                       # Number of conditional branches predicted as taken (Count)
system.cpu.branchPred.condIncorrect                 0                       # Number of conditional branches incorrect (Count)
system.cpu.branchPred.predTakenBTBMiss              0                       # Number of branches predicted taken but missed in BTB (Count)
system.cpu.branchPred.NotTakenMispredicted            0                       # Number branches predicted 'not taken' but turned out to be taken (Count)
system.cpu.branchPred.TakenMispredicted             0                       # Number branches predicted taken but are actually not taken (Count)
system.cpu.branchPred.BTBLookups                    0                       # Number of BTB lookups (Count)
system.cpu.branchPred.BTBUpdates                    0                       # Number of BTB updates (Count)
system.cpu.branchPred.BTBHits                       0                       # Number of BTB hits (Count)
system.cpu.branchPred.BTBHitRatio                 nan                       # BTB Hit Ratio (Ratio)
system.cpu.branchPred.BTBMispredicted               0                       # Number BTB mispredictions. No target found or target wrong (Count)
system.cpu.branchPred.indirectLookups               0                       # Number of indirect predictor lookups. (Count)
system.cpu.branchPred.indirectHits                  0                       # Number of indirect target hits. (Count)
system.cpu.branchPred.indirectMisses                0                       # Number of indirect misses. (Count)
system.cpu.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
system.cpu.branchPred.btb.lookups::NoBranch            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::Return            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::CallDirect            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::CallIndirect            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::DirectCond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::DirectUncond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::IndirectCond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::IndirectUncond            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.lookups::total            0                       # Number of BTB lookups (Count)
system.cpu.branchPred.btb.misses::NoBranch            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::Return            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::CallDirect            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::CallIndirect            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::DirectCond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::DirectUncond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::IndirectCond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::IndirectUncond            0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.misses::total             0                       # Number of BTB misses (Count)
system.cpu.branchPred.btb.updates::NoBranch            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::Return            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::CallDirect            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::CallIndirect            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::DirectCond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::DirectUncond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::IndirectCond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::IndirectUncond            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.updates::total            0                       # Number of BTB updates (Count)
system.cpu.branchPred.btb.mispredict::NoBranch            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::Return            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::CallDirect            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::CallIndirect            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::DirectCond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::DirectUncond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::IndirectCond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::IndirectUncond            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.mispredict::total            0                       # Number of BTB mispredictions. No target found or target wrong. (Count)
system.cpu.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 11274548555906                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.branchPred.indirectBranchPred.lookups            0                       # Number of lookups (Count)
system.cpu.branchPred.indirectBranchPred.hits            0                       # Number of hits of a tag (Count)
system.cpu.branchPred.indirectBranchPred.misses            0                       # Number of misses (Count)
system.cpu.branchPred.indirectBranchPred.targetRecords            0                       # Number of targets that where recorded/installed in the cache (Count)
system.cpu.branchPred.indirectBranchPred.indirectRecords            0                       # Number of indirect branches/calls recorded in the indirect hist (Count)
system.cpu.branchPred.indirectBranchPred.speculativeOverflows            0                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
system.cpu.branchPred.ras.pushes                    0                       # Number of times a PC was pushed onto the RAS (Count)
system.cpu.branchPred.ras.pops                      0                       # Number of times a PC was poped from the RAS (Count)
system.cpu.branchPred.ras.squashes                  0                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
system.cpu.branchPred.ras.used                      0                       # Number of times the RAS is the provider (Count)
system.cpu.branchPred.ras.correct                   0                       # Number of times the RAS is the provider and the prediction is correct (Count)
system.cpu.branchPred.ras.incorrect                 0                       # Number of times the RAS is the provider and the prediction is wrong (Count)
system.cpu.commitStats0.numInsts            102557568                       # Number of instructions committed (thread level) (Count)
system.cpu.commitStats0.numOps              198865108                       # Number of ops (including micro ops) committed (thread level) (Count)
system.cpu.commitStats0.numInstsNotNOP              0                       # Number of instructions committed excluding NOPs or prefetches (Count)
system.cpu.commitStats0.numOpsNotNOP                0                       # Number of Ops (including micro ops) Simulated (Count)
system.cpu.commitStats0.cpi                  8.245245                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
system.cpu.commitStats0.ipc                  0.121282                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
system.cpu.commitStats0.numMemRefs                  0                       # Number of memory references committed (Count)
system.cpu.commitStats0.numFpInsts                  0                       # Number of float instructions (Count)
system.cpu.commitStats0.numIntInsts                 0                       # Number of integer instructions (Count)
system.cpu.commitStats0.numLoadInsts                0                       # Number of load instructions (Count)
system.cpu.commitStats0.numStoreInsts               0                       # Number of store instructions (Count)
system.cpu.commitStats0.numVecInsts                 0                       # Number of vector instructions (Count)
system.cpu.commitStats0.committedInstType::No_OpClass      1074081      0.54%      0.54% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IntAlu    164101225     82.52%     83.06% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IntMult       161724      0.08%     83.14% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IntDiv      1749035      0.88%     84.02% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatAdd       204196      0.10%     84.12% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatCmp            0      0.00%     84.12% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatCvt         1632      0.00%     84.12% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMult            0      0.00%     84.12% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMultAcc            0      0.00%     84.12% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatDiv            0      0.00%     84.12% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMisc            0      0.00%     84.12% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatSqrt            0      0.00%     84.12% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAdd         6830      0.00%     84.13% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAddAcc            0      0.00%     84.13% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAlu       406869      0.20%     84.33% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdCmp            6      0.00%     84.33% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdCvt       112500      0.06%     84.39% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMisc       161300      0.08%     84.47% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMult            0      0.00%     84.47% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMultAcc            0      0.00%     84.47% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     84.47% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShift         2170      0.00%     84.47% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     84.47% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdDiv            0      0.00%     84.47% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSqrt            0      0.00%     84.47% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatAdd        49154      0.02%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatCvt            4      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatDiv            2      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMult            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAes            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdAesMix            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdPredAlu            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::Matrix            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MatrixMov            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MatrixOP            0      0.00%     84.49% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MemRead     23601965     11.87%     96.36% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::MemWrite      6739221      3.39%     99.75% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMemRead       313850      0.16%     99.91% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::FloatMemWrite       179344      0.09%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdExt            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::SimdConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
system.cpu.commitStats0.committedInstType::total    198865108                       # Class of committed instruction. (Count)
system.cpu.executeStats0.numInsts                   0                       # Number of executed instructions (Count)
system.cpu.executeStats0.numNop                     0                       # Number of nop insts executed (Count)
system.cpu.executeStats0.numBranches                0                       # Number of branches executed (Count)
system.cpu.executeStats0.numLoadInsts               0                       # Number of load instructions executed (Count)
system.cpu.executeStats0.numStoreInsts              0                       # Number of stores executed (Count)
system.cpu.executeStats0.instRate                   0                       # Inst execution rate ((Count/Cycle))
system.cpu.executeStats0.numFpRegWrites             0                       # Number of times the floating registers were written (Count)
system.cpu.executeStats0.numMemRefs                 0                       # Number of memory refs (Count)
system.cpu.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
system.cpu.executeStats0.numDiscardedOps     41910540                       # Number of ops (including micro ops) which were discarded before commit (Count)
system.cpu.fetch2.intInstructions                  68                       # Number of integer instructions successfully decoded (Count)
system.cpu.fetch2.fpInstructions                    0                       # Number of floating point instructions successfully decoded (Count)
system.cpu.fetch2.vecInstructions                   0                       # Number of SIMD instructions successfully decoded (Count)
system.cpu.fetch2.loadInstructions                  0                       # Number of memory load instructions successfully decoded (Count)
system.cpu.fetch2.storeInstructions                 0                       # Number of memory store instructions successfully decoded (Count)
system.cpu.fetch2.amoInstructions                   0                       # Number of memory atomic instructions successfully decoded (Count)
system.cpu.fetchStats0.numInsts                     0                       # Number of instructions fetched (thread level) (Count)
system.cpu.fetchStats0.numOps                       0                       # Number of ops (including micro ops) fetched (thread level) (Count)
system.cpu.fetchStats0.fetchRate                    0                       # Number of inst fetches per cycle ((Count/Cycle))
system.cpu.fetchStats0.branchRate                   0                       # Number of branch fetches per cycle (Ratio)
system.cpu.fetchStats0.numFetchSuspends             0                       # Number of times Execute suspended instruction fetching (Count)
system.cpu.interrupts.clk_domain.clock         213328                       # Clock period in ticks (Tick)
system.cpu.mmu.dtb.rdAccesses                32309225                       # TLB accesses on read requests (Count)
system.cpu.mmu.dtb.wrAccesses                 7978320                       # TLB accesses on write requests (Count)
system.cpu.mmu.dtb.rdMisses                    955434                       # TLB misses on read requests (Count)
system.cpu.mmu.dtb.wrMisses                      3152                       # TLB misses on write requests (Count)
system.cpu.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 11274548555906                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.mmu.itb.rdAccesses                       0                       # TLB accesses on read requests (Count)
system.cpu.mmu.itb.wrAccesses                43733629                       # TLB accesses on write requests (Count)
system.cpu.mmu.itb.rdMisses                         0                       # TLB misses on read requests (Count)
system.cpu.mmu.itb.wrMisses                     49729                       # TLB misses on write requests (Count)
system.cpu.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 11274548555906                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.power_state.pwrStateResidencyTicks::ON 11274548555906                       # Cumulative time (in ticks) in various power states (Tick)
system.cpu.thread_0.numInsts                102557568                       # Number of Instructions committed (Count)
system.cpu.thread_0.numOps                  198865108                       # Number of Ops committed (Count)
system.cpu.thread_0.numMemRefs                      0                       # Number of Memory References (Count)
system.cpu.workload.numSyscalls                   123                       # Number of system calls (Count)
system.mem_ctrl.avgPriority_cpu.inst::samples  43684304.00                       # Average QoS priority value for accepted requests (Count)
system.mem_ctrl.avgPriority_cpu.data::samples  29743184.00                       # Average QoS priority value for accepted requests (Count)
system.mem_ctrl.priorityMinLatency       0.000000018750                       # per QoS priority minimum request to response latency (Second)
system.mem_ctrl.priorityMaxLatency       0.840159275912                       # per QoS priority maximum request to response latency (Second)
system.mem_ctrl.numReadWriteTurnArounds          6790                       # Number of turnarounds from READ to WRITE (Count)
system.mem_ctrl.numWriteReadTurnArounds          6790                       # Number of turnarounds from WRITE to READ (Count)
system.mem_ctrl.numStayReadState            156421257                       # Number of times bus staying in READ state (Count)
system.mem_ctrl.numStayWriteState              111518                       # Number of times bus staying in WRITE state (Count)
system.mem_ctrl.readReqs                     74670645                       # Number of read requests accepted (Count)
system.mem_ctrl.writeReqs                     6917736                       # Number of write requests accepted (Count)
system.mem_ctrl.readBursts                   74670645                       # Number of controller read bursts, including those serviced by the write queue (Count)
system.mem_ctrl.writeBursts                   6917736                       # Number of controller write bursts, including those merged in the write queue (Count)
system.mem_ctrl.servicedByWrQ                 1361151                       # Number of controller read bursts serviced by the write queue (Count)
system.mem_ctrl.mergedWrBursts                6799742                       # Number of controller write bursts merged with an existing one (Count)
system.mem_ctrl.neitherReadNorWriteReqs             0                       # Number of requests that are neither read nor write (Count)
system.mem_ctrl.avgRdQLen                        1.10                       # Average read queue length when enqueuing ((Count/Tick))
system.mem_ctrl.avgWrQLen                       26.01                       # Average write queue length when enqueuing ((Count/Tick))
system.mem_ctrl.numRdRetry                          0                       # Number of times read queue was full causing retry (Count)
system.mem_ctrl.numWrRetry                          0                       # Number of times write queue was full causing retry (Count)
system.mem_ctrl.readPktSize::0                9578860                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::1                  15053                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::2                 428570                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::3               20963858                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::4                      0                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::5                      0                       # Read request sizes (log2) (Count)
system.mem_ctrl.readPktSize::6               43684304                       # Read request sizes (log2) (Count)
system.mem_ctrl.writePktSize::0               1927471                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::1                 50672                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::2                194451                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::3               4745142                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::4                     0                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::5                     0                       # Write request sizes (log2) (Count)
system.mem_ctrl.writePktSize::6                     0                       # Write request sizes (log2) (Count)
system.mem_ctrl.rdQLenPdf::0                 67053422                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::1                  5995482                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::2                   260590                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::3                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::4                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::5                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::6                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::7                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::8                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::9                        0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::10                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::11                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::12                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::13                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::14                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::15                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::16                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::17                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::18                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::19                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::20                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::21                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::22                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::23                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::24                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::25                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::26                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::27                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::28                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::29                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::30                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.rdQLenPdf::31                       0                       # What read queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::0                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::1                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::2                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::3                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::4                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::5                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::6                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::7                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::8                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::9                        1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::10                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::11                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::12                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::13                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::14                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::15                    4544                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::16                    4681                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::17                    6780                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::18                    6792                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::19                    6800                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::20                    6802                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::21                    6795                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::22                    6861                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::23                    6795                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::24                    6799                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::25                    6795                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::26                    6790                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::27                    6790                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::28                    6791                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::29                    6790                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::30                    6791                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::31                    6790                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::32                    6792                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::33                       1                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::34                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::35                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::36                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::37                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::38                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::39                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::40                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::41                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::42                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::43                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::44                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::45                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::46                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::47                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::48                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::49                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::50                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::51                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::52                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::53                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::54                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::55                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::56                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::57                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::58                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::59                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::60                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::61                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::62                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.wrQLenPdf::63                       0                       # What write queue length does an incoming req see (Count)
system.mem_ctrl.rdPerTurnAround::samples         6790                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::mean    10796.642121                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::gmean    3066.089201                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::stdev   14204.202173                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::0-4095          2782     40.97%     40.97% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::4096-8191          463      6.82%     47.79% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::8192-12287         1849     27.23%     75.02% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::12288-16383          362      5.33%     80.35% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::16384-20479          630      9.28%     89.63% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::20480-24575           21      0.31%     89.94% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::24576-28671           22      0.32%     90.27% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::28672-32767           29      0.43%     90.69% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::32768-36863           57      0.84%     91.53% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::36864-40959           50      0.74%     92.27% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::40960-45055          225      3.31%     95.58% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::45056-49151          133      1.96%     97.54% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::49152-53247           24      0.35%     97.89% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::53248-57343           24      0.35%     98.25% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::57344-61439           18      0.27%     98.51% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::61440-65535           22      0.32%     98.84% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::65536-69631           17      0.25%     99.09% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::69632-73727           18      0.27%     99.35% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::73728-77823           29      0.43%     99.78% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::77824-81919            7      0.10%     99.88% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::81920-86015            4      0.06%     99.94% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::90112-94207            3      0.04%     99.99% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::94208-98303            1      0.01%    100.00% # Reads before turning the bus around for writes (Count)
system.mem_ctrl.rdPerTurnAround::total           6790                       # Reads before turning the bus around for writes (Count)
system.mem_ctrl.wrPerTurnAround::samples         6790                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::mean       17.374080                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::gmean      17.348019                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::stdev       0.938987                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::16              2103     30.97%     30.97% # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::17               139      2.05%     33.02% # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::18              4453     65.58%     98.60% # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::19                95      1.40%    100.00% # Writes before turning the bus around for reads (Count)
system.mem_ctrl.wrPerTurnAround::total           6790                       # Writes before turning the bus around for reads (Count)
system.mem_ctrl.bytesReadWrQ                 87113664                       # Total number of bytes read from write queue (Byte)
system.mem_ctrl.bytesReadSys               2974829144                       # Total read bytes from the system interface side (Byte)
system.mem_ctrl.bytesWrittenSys              40767740                       # Total written bytes from the system interface side (Byte)
system.mem_ctrl.avgRdBWSys               263853504.13358071                       # Average system read bandwidth in Byte/s ((Byte/Second))
system.mem_ctrl.avgWrBWSys               3615908.85859855                       # Average system write bandwidth in Byte/s ((Byte/Second))
system.mem_ctrl.totGap                   11274548529240                       # Total gap between requests (Tick)
system.mem_ctrl.avgGap                      138188.16                       # Average gap between requests ((Tick/Count))
system.mem_ctrl.requestorReadBytes::cpu.inst   2795795456                       # Per-requestor bytes read from memory (Byte)
system.mem_ctrl.requestorReadBytes::cpu.data    168252616                       # Per-requestor bytes read from memory (Byte)
system.mem_ctrl.requestorWriteBytes::cpu.data       630280                       # Per-requestor bytes write to memory (Byte)
system.mem_ctrl.requestorReadRate::cpu.inst 247974048.995111674070                       # Per-requestor bytes read from memory rate ((Byte/Second))
system.mem_ctrl.requestorReadRate::cpu.data 14923224.212987529114                       # Per-requestor bytes read from memory rate ((Byte/Second))
system.mem_ctrl.requestorWriteRate::cpu.data 55902.903506485629                       # Per-requestor bytes write to memory rate ((Byte/Second))
system.mem_ctrl.requestorReadAccesses::cpu.inst     43684304                       # Per-requestor read serviced memory accesses (Count)
system.mem_ctrl.requestorReadAccesses::cpu.data     30986341                       # Per-requestor read serviced memory accesses (Count)
system.mem_ctrl.requestorWriteAccesses::cpu.data      6917736                       # Per-requestor write serviced memory accesses (Count)
system.mem_ctrl.requestorReadTotalLat::cpu.inst 1110400753600                       # Per-requestor read total memory access latency (Tick)
system.mem_ctrl.requestorReadTotalLat::cpu.data 800143157345                       # Per-requestor read total memory access latency (Tick)
system.mem_ctrl.requestorWriteTotalLat::cpu.data 287846578633729                       # Per-requestor write total memory access latency (Tick)
system.mem_ctrl.requestorReadAvgLat::cpu.inst     25418.76                       # Per-requestor read average memory access latency ((Tick/Count))
system.mem_ctrl.requestorReadAvgLat::cpu.data     25822.45                       # Per-requestor read average memory access latency ((Tick/Count))
system.mem_ctrl.requestorWriteAvgLat::cpu.data  41609939.82                       # Per-requestor write average memory access latency ((Tick/Count))
system.mem_ctrl.dram.bytesRead::cpu.inst   2795795456                       # Number of bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesRead::cpu.data    179033688                       # Number of bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesRead::total      2974829144                       # Number of bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesInstRead::cpu.inst   2795795456                       # Number of instructions bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesInstRead::total   2795795456                       # Number of instructions bytes read from this memory (Byte)
system.mem_ctrl.dram.bytesWritten::cpu.data     40767740                       # Number of bytes written to this memory (Byte)
system.mem_ctrl.dram.bytesWritten::total     40767740                       # Number of bytes written to this memory (Byte)
system.mem_ctrl.dram.numReads::cpu.inst      43684304                       # Number of read requests responded to by this memory (Count)
system.mem_ctrl.dram.numReads::cpu.data      30986341                       # Number of read requests responded to by this memory (Count)
system.mem_ctrl.dram.numReads::total         74670645                       # Number of read requests responded to by this memory (Count)
system.mem_ctrl.dram.numWrites::cpu.data      6917736                       # Number of write requests responded to by this memory (Count)
system.mem_ctrl.dram.numWrites::total         6917736                       # Number of write requests responded to by this memory (Count)
system.mem_ctrl.dram.bwRead::cpu.inst       247974049                       # Total read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwRead::cpu.data        15879455                       # Total read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwRead::total          263853504                       # Total read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwInstRead::cpu.inst    247974049                       # Instruction read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwInstRead::total      247974049                       # Instruction read bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwWrite::cpu.data        3615909                       # Write bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwWrite::total           3615909                       # Write bandwidth from this memory ((Byte/Second))
system.mem_ctrl.dram.bwTotal::cpu.inst      247974049                       # Total bandwidth to/from this memory ((Byte/Second))
system.mem_ctrl.dram.bwTotal::cpu.data       19495364                       # Total bandwidth to/from this memory ((Byte/Second))
system.mem_ctrl.dram.bwTotal::total         267469413                       # Total bandwidth to/from this memory ((Byte/Second))
system.mem_ctrl.dram.readBursts              73309494                       # Number of DRAM read bursts (Count)
system.mem_ctrl.dram.writeBursts               117970                       # Number of DRAM write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::0      13442059                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::1       9605999                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::2        413952                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::3        577809                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::4       9418642                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::5        842526                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::6       4351039                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::7       2382697                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::8       5012343                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::9       1347771                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::10       433139                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::11       582846                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::12       915767                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::13      2539233                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::14     16253242                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankRdBursts::15      5190430                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::0         20316                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::1         15616                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::2          5520                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::3          5362                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::4          5404                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::5          5376                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::6          5434                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::7          5475                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::8          5893                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::9          5705                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::10         5586                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::11         5533                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::12         5791                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::13         5633                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::14         9533                       # Per bank write bursts (Count)
system.mem_ctrl.dram.perBankWrBursts::15         5793                       # Per bank write bursts (Count)
system.mem_ctrl.dram.totQLat             535990898445                       # Total ticks spent queuing (Tick)
system.mem_ctrl.dram.totBusLat           366547470000                       # Total ticks spent in databus transfers (Tick)
system.mem_ctrl.dram.totMemAccLat        1910543910945                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
system.mem_ctrl.dram.avgQLat                  7311.34                       # Average queueing delay per DRAM burst ((Tick/Count))
system.mem_ctrl.dram.avgBusLat                5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
system.mem_ctrl.dram.avgMemAccLat            26061.34                       # Average memory access latency per DRAM burst ((Tick/Count))
system.mem_ctrl.dram.readRowHits             61458823                       # Number of row buffer hits during reads (Count)
system.mem_ctrl.dram.writeRowHits              105596                       # Number of row buffer hits during writes (Count)
system.mem_ctrl.dram.readRowHitRate             83.83                       # Row buffer hit rate for reads (Ratio)
system.mem_ctrl.dram.writeRowHitRate            89.51                       # Row buffer hit rate for writes (Ratio)
system.mem_ctrl.dram.bytesPerActivate::samples     11863038                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::mean   396.134319                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::gmean   254.362835                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::stdev   348.157290                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::0-127      2730498     23.02%     23.02% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::128-255      2953980     24.90%     47.92% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::256-383      1448882     12.21%     60.13% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::384-511      1155577      9.74%     69.87% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::512-639       699378      5.90%     75.77% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::640-767       351478      2.96%     78.73% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::768-895       169792      1.43%     80.16% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::896-1023       341424      2.88%     83.04% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::1024-1151      2012029     16.96%    100.00% # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.bytesPerActivate::total     11863038                       # Bytes accessed per row activation (Byte)
system.mem_ctrl.dram.dramBytesRead         4691807616                       # Total bytes read (Byte)
system.mem_ctrl.dram.dramBytesWritten         7550080                       # Total bytes written (Byte)
system.mem_ctrl.dram.avgRdBW               416.141506                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
system.mem_ctrl.dram.avgWrBW                 0.669657                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
system.mem_ctrl.dram.peakBW                  12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
system.mem_ctrl.dram.busUtil                     3.26                       # Data bus utilization in percentage (Ratio)
system.mem_ctrl.dram.busUtilRead                 3.25                       # Data bus utilization in percentage for reads (Ratio)
system.mem_ctrl.dram.busUtilWrite                0.01                       # Data bus utilization in percentage for writes (Ratio)
system.mem_ctrl.dram.pageHitRate                83.84                       # Row buffer hit rate, read and write combined (Ratio)
system.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED 11274548555906                       # Cumulative time (in ticks) in various power states (Tick)
system.mem_ctrl.dram.rank0.actEnergy      49900503240                       # Energy for activate commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.preEnergy      26522731290                       # Energy for precharge commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.readEnergy    292987922220                       # Energy for read commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.writeEnergy      357585660                       # Energy for write commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.refreshEnergy 890003022480.000122                       # Energy for refresh commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.actBackEnergy 4705423193700                       # Energy for active background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.preBackEnergy 366965008800                       # Energy for precharge background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.totalEnergy   6332159967390                       # Total energy per rank (pJ) (Joule)
system.mem_ctrl.dram.rank0.averagePower    561.633128                       # Core power per rank (mW) (Watt)
system.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::IDLE 905934037786                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::REF 376481820000                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::ACT 9992132698120                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.actEnergy      34801638060                       # Energy for activate commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.preEnergy      18497497920                       # Energy for precharge commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.readEnergy    230441864940                       # Energy for read commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.writeEnergy      258217740                       # Energy for write commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.refreshEnergy 890003022480.000122                       # Energy for refresh commands per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.actBackEnergy 4179634759200                       # Energy for active background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.preBackEnergy 809734216800                       # Energy for precharge background per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.totalEnergy   6163371217140                       # Total energy per rank (pJ) (Joule)
system.mem_ctrl.dram.rank1.averagePower    546.662351                       # Core power per rank (mW) (Watt)
system.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::IDLE 2055838063676                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::REF 376481820000                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::ACT 8842228672230                       # Time in different power states (Tick)
system.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
system.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED 11274548555906                       # Cumulative time (in ticks) in various power states (Tick)
system.membus.transDist::ReadReq             74663487                       # Transaction distribution (Count)
system.membus.transDist::ReadResp            74663485                       # Transaction distribution (Count)
system.membus.transDist::WriteReq             6910580                       # Transaction distribution (Count)
system.membus.transDist::WriteResp            6910580                       # Transaction distribution (Count)
system.membus.transDist::SoftPFReq                  2                       # Transaction distribution (Count)
system.membus.transDist::SoftPFResp                 2                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWReadReq         7156                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWReadResp         7156                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWWriteReq         7156                       # Transaction distribution (Count)
system.membus.transDist::LockedRMWWriteResp         7156                       # Transaction distribution (Count)
system.membus.pktCount_system.cpu.fetch1.icache_port::system.mem_ctrl.port     87368607                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount_system.cpu.fetch1.icache_port::total     87368607                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount_system.cpu.execute.dcache_port::system.mem_ctrl.port     75808153                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount_system.cpu.execute.dcache_port::total     75808153                       # Packet count per connected requestor and responder (Count)
system.membus.pktCount::total               163176760                       # Packet count per connected requestor and responder (Count)
system.membus.pktSize_system.cpu.fetch1.icache_port::system.mem_ctrl.port   2795795392                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize_system.cpu.fetch1.icache_port::total   2795795392                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize_system.cpu.execute.dcache_port::system.mem_ctrl.port    219801420                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize_system.cpu.execute.dcache_port::total    219801420                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.pktSize::total               3015596812                       # Cumulative packet size per connected requestor and responder (Byte)
system.membus.snoops                                0                       # Total snoops (Count)
system.membus.snoopTraffic                          0                       # Total snoop traffic (Byte)
system.membus.snoopFanout::samples           81588381                       # Request fanout histogram (Count)
system.membus.snoopFanout::mean                     0                       # Request fanout histogram (Count)
system.membus.snoopFanout::stdev                    0                       # Request fanout histogram (Count)
system.membus.snoopFanout::underflows               0      0.00%      0.00% # Request fanout histogram (Count)
system.membus.snoopFanout::0                 81588381    100.00%    100.00% # Request fanout histogram (Count)
system.membus.snoopFanout::1                        0      0.00%    100.00% # Request fanout histogram (Count)
system.membus.snoopFanout::overflows                0      0.00%    100.00% # Request fanout histogram (Count)
system.membus.snoopFanout::min_value                0                       # Request fanout histogram (Count)
system.membus.snoopFanout::max_value                0                       # Request fanout histogram (Count)
system.membus.snoopFanout::total             81588381                       # Request fanout histogram (Count)
system.membus.power_state.pwrStateResidencyTicks::UNDEFINED 11274548555906                       # Cumulative time (in ticks) in various power states (Tick)
system.membus.reqLayer2.occupancy        1180052057961                       # Layer occupancy (ticks) (Tick)
system.membus.reqLayer2.utilization               0.1                       # Layer utilization (Ratio)
system.membus.respLayer1.occupancy       2974407522532                       # Layer occupancy (ticks) (Tick)
system.membus.respLayer1.utilization              0.3                       # Layer utilization (Ratio)
system.membus.respLayer2.occupancy       982416824234                       # Layer occupancy (ticks) (Tick)
system.membus.respLayer2.utilization              0.1                       # Layer utilization (Ratio)
system.membus.snoop_filter.totRequests              0                       # Total number of requests made to the snoop filter. (Count)
system.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
system.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
system.membus.snoop_filter.totSnoops                0                       # Total number of snoops made to the snoop filter. (Count)
system.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
system.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
system.workload.inst.arm                            0                       # number of arm instructions executed (Count)
system.workload.inst.quiesce                        0                       # number of quiesce instructions executed (Count)
system.cpu.idleCycles                       267275146                       # Total number of cycles that the object has spent stopped (Unspecified)
system.cpu.tickCycles                       578337136                       # Number of cycles that the object actually ticked (Unspecified)

---------- End Simulation Statistics   ----------
